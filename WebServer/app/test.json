{
    "课时2. 条件语句、循环语句与函数": {
  "questions": [
    {
      "题目": "在JavaScript中，闭包是什么？",
      "选项": [
        "A. 一个可以访问外部函数变量的内部函数",
        "B. 一个不能被外部访问的函数",
        "C. 一个返回另一个函数的函数",
        "D. 一个只包含局部变量的函数"
      ],
      "答案": "A",
      "解释": "闭包是JavaScript中的一个重要概念，它指的是一个可以访问和操作其外部词法环境（outer lexical environment）的函数。这意味着一个函数内部的函数（或称为内嵌函数）可以访问其父级函数的变量，即使父级函数已经执行完毕。"
    },
    {
      "题目": "以下哪个选项演示了JavaScript中的闭包？",
      "选项": [
        "A. function outer() { var x = 10; function inner() { return x; } return inner; }",
        "B. function outer() { var x = 10; var inner = function() { return x; }; }",
        "C. function outer() { let x = 10; function inner() { return x; } return inner; }",
        "D. function outer() { const x = 10; function inner() { return x; } return inner; }"
      ],
      "答案": "A",
      "解释": "选项A中的代码创建了一个名为outer的外部函数，它定义了一个局部变量x和一个名为inner的内部函数。inner函数可以访问x，并且outer函数返回了inner函数。这样，当outer函数执行后，返回的inner函数形成了一个闭包，因为它可以访问其外部函数outer的词法环境。"
    },
    {
      "题目": "在JavaScript中，使用'var'、'let'和'const'声明的变量在作用域上有何区别？",
      "选项": [
        "A. 使用'var'声明的变量具有函数作用域，而'let'和'const'具有块级作用域",
        "B. 'var'和'let'都可以重新声明变量，但'const'不可以",
        "C. 'var'和'let'都可以被重新赋值，但'const'不可以",
        "D. 'var'、'let'和'const'都具有相同的作用域规则"
      ],
      "答案": "A",
      "解释": "'var'声明的变量具有函数作用域或全局作用域，而'let'和'const'声明的变量具有块级作用域。这意味着使用'var'声明的变量在其声明所在的函数内部都是可见的，而'let'和'const'声明的变量只在声明它们的块或子块中可见。"
    },
    {
      "题目": "在JavaScript中，如何创建一个私有变量？",
      "选项": [
        "A. 使用'var'关键字在函数内部声明变量",
        "B. 使用'let'关键字在函数外部声明变量",
        "C. 使用'const'关键字在任何地方声明变量",
        "D. 将变量名设为一个复杂且不易猜测的字符串"
      ],
      "答案": "A",
      "解释": "在JavaScript中，通过在函数内部使用'var'、'let'或'const'关键字声明的变量默认是私有的，因为它们只能在声明它们的函数内部访问。这意味着这些变量对于函数外部的代码是不可见的，从而实现了私有性。"
    },
    {
      "题目": "以下哪个选项正确地展示了JavaScript中的词法作用域（lexical scoping）？",
      "选项": [
        "A. 函数内部总是可以访问其外部作用域的变量",
        "B. 使用'var'声明的变量具有动态作用域",
        "C. 'const'声明的常量具有块级作用域",
        "D. JavaScript不使用词法作用域，而是使用动态作用域"
      ],
      "答案": "C",
      "解释": "在JavaScript中，'const'声明的常量确实具有块级作用域，这是词法作用域的一个特性。这意味着常量只在声明它的块或子块中可见。其他选项要么描述的是不正确的概念（如动态作用域），要么是对JavaScript作用域规则的部分正确描述（如函数内部可以访问其外部作用域的变量，但这并不总是正确的，取决于变量的声明位置和方式）。"
    }
  ],
  "allAnswer": ["A", "A", "A", "A", "C"],
  "成绩": 0
}
}
